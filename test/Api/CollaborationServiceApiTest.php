<?php
/**
 * CollaborationServiceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Jelastic API docs
 *
 * lets developers to automate a set of actions required for application lifecycle and extend our platform functionality by combining with other services. Using our API you can programmatically create environments, deploy apps and perform other tasks that could be earlier accomplished only via Jelastic dashboard but not limited to them.  Jelastic API follows REST principles. REST API determines a set of functions which can be requested by a developer, who then receives a response. The interaction is performed via HTTP protocol. The advantage of such method is a wide extension of the HTTP protocol. That's why REST API can be used from almost any programming language.
 *
 * The version of the OpenAPI document: 8.0.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CollaborationServiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CollaborationServiceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for usersCollaborationRestAcceptcollaborationPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestAcceptcollaborationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestActivatememberPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestActivatememberPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestAddpolicyPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestAddpolicyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestAddresourcesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestAddresourcesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestAddrolePost
     *
     * .
     *
     */
    public function testUsersCollaborationRestAddrolePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestCheckenvironmentrightsPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestCheckenvironmentrightsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestDeletememberPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestDeletememberPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestDeletepolicyPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestDeletepolicyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestDeleteresourcesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestDeleteresourcesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestDeleterolePost
     *
     * .
     *
     */
    public function testUsersCollaborationRestDeleterolePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestEditcollaborationPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestEditcollaborationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestEditmemberPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestEditmemberPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestEditpolicyPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestEditpolicyPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestEditrolePost
     *
     * .
     *
     */
    public function testUsersCollaborationRestEditrolePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetcollaborationresourcemethodsPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetcollaborationresourcemethodsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetcollaborationresourcesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetcollaborationresourcesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetcollaborationrolemethodsPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetcollaborationrolemethodsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetcollaborationsPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetcollaborationsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetmemberresourcesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetmemberresourcesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetmembersPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetmembersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetpoliciesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetpoliciesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetpolicymethodsPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetpolicymethodsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetresourcerolesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetresourcerolesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestGetrolesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestGetrolesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestInvitememberPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestInvitememberPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestLeavecollaborationPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestLeavecollaborationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestRejectcollaborationPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestRejectcollaborationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestResendmemberinvitationPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestResendmemberinvitationPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestSetresourcePost
     *
     * .
     *
     */
    public function testUsersCollaborationRestSetresourcePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestSetresourcesPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestSetresourcesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersCollaborationRestSuspendmemberPost
     *
     * .
     *
     */
    public function testUsersCollaborationRestSuspendmemberPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
